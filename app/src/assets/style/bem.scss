$namespace: 'lro' !default;
$block-sel: '-' !default;
$elem-sel: '__' !default;
$mod-sel: '--' !default;

/**
 * @description: 拼接bem class
 * @example:
 *      @include block(test) { => .lro-test {
 *         正文
 *         color: pink;              color: pink;
 *      }                         }
 * @return {*}
 */
@mixin block($block) {
    $B: #{$namespace + $block-sel + $block};
    @debug 'B ' + $B;
    .#{$B} {
        // 正文占位符
        @content;
    }
}

/**
 * @description: 获取父级后拼接，跳出嵌套，不接父级作为前缀
 * @example:
 *      @include block(test) {      => .lro-test__inner {
 *          @include elem(inner) {
 *              color: yellow;              color: yellow;
 *          }                           }
 *      }
 *
 * @return {*}
 */
@mixin elem($elem, $par: null) {
    // 获取父级元素
    $parent: &;
    @if $par != null {
        $parent: $namespace + $block-sel + $par;
    }
    // 跳出嵌套
    @at-root {
        $E: #{$parent + $elem-sel + $elem};
        @debug 'E ' + $E;
        #{$E} {
            @content;
        }
    }
}

@mixin mod($mod, $par: null) {
    // 获取父级元素
    $parent: &;
    @if $par != null {
        $parent: $namespace + $block-sel + $par;
    }
    // 跳出嵌套
    @at-root {
        $M: #{$parent + $mod-sel + $mod};
        @debug 'M ' + $M;
        #{$M} {
            @content;
        }
    }
}

@mixin bfc {
    height: 100%;
    overflow: hidden;
}
